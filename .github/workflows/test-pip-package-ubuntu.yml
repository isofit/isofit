# Test a package built and installed by pip.
#
# Test ISOFIT on a variety of versions of Python. This test suite is likely
# sufficient for broadly testing the 'pip' package, with the assumption that
# users are able to get all dependencies installed. Any further testing should
# be for a specific environment, and be very targeted.
#
# For example, testing Ubuntu 22.04 package ecosystem should likely be done by
# building a deb for ISOFIT, and testing against the Python packages provided by
# the apt package repo. It may also be possible to test this environment with a
# mix of upstream packages and a non-isolated virtual environment built with the
# '--system-site-packages' flag.
#
# Readers looking at this file for the purposes of installing ISOFIT on their
# system should be aware that these tests run in an isolated manner. Be aware
# that both 'pip' and 'apt/apt-get' can both be used to install Python
# packages, but pip installing something with Ubuntu's system Python will
# conflict with packages installed via 'apt/apt-get', and produce an environment
# that is difficult to unwind.


name: Test 'pip' Package

on:
  push:
    branches: ["dev", "main"]
  pull_request:
    branches: ["dev", "main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        pytest-flags: ["-m unmarked", "-m slow", "-m examples"]

    steps:

      - uses: actions/checkout@v3

      - name: Print concurrency group
        run: echo '${{ github.workflow }}-${{ github.ref }}'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install ISOFIT and most software dependencies
        shell: bash
        run: |

          # Python packaging dependencies. The presence of 'wheel' triggers
          # a lot of new Python packaging machinery that will eventually
          # become the default.
          python3 -m pip install pip setuptools wheel --upgrade
          python3 --version
          python3 -m pip show pip setuptools wheel

          # Install 'isofit'
          python3 -m pip install --editable ".[test]"

          # Ensure ISOFIT has been installed
          python3 -c "import isofit; print(isofit.__file__)"

      - name: Cached Extras
        id: cache-extras
        uses: actions/cache@v3
        env:
          cache-name: cache-extras
        with:
          path: extras
          key: ${{ env.cache-name }}

      - name: Download extras
        if: ${{ steps.cache-extras.outputs.cache-hit != true }}
        shell: bash
        run: |
          isofit -b extras download all
          isofit build

      - name: Execute tests
        shell: bash
        run: |
          python3 -m pytest -s "${{ matrix.pytest-flags }}"
